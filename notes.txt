Determine hardware needed
Design model for vehicle
Print vehicle model
Assemble vehicle with hardware
Software development


Parts:
- Raspberry pi 3
- Raspi camera module: https://www.adafruit.com/product/3099?src=raspberrypi
- Motor controller board
- 2 stepper motors
- White LED or RBG Light for the front
- 2 drive wheels
- swivel wheel
- Jumper wires?
- battery 1 or 2


One motor for each wheel, turning based on turning up/down power to each
-Python application on the raspberry pi that listens for commands
-web sever for control and video of vehicle

Web Server:
-Live feed from camera
-Take a screenshot of the current video frame and store it
-Toggle for light on/off
-Joystick for movement or use camera in landscape mode and have phone movements indicate left/right
-Slider for speed
-Possibly have a listener for speed/movement based on touch on the screen without taking up screen real estate. For example, just sliding up/down on the right side of the screen would affect the throttle even if there is no bar to show it


VLC Streaming:

vlc -vvv screen:// --sout '#transcode{vcodec=theo,vb=256,scale=Auto,acodec=none}:http{dst=:8081/stream.ogg}'

https://www.w3schools.com/html/html5_video.asp
http://nicklothian.com/blog/2009/11/17/using-a-webcam-with-html-5-via-vlc/
https://wiki.videolan.org/Documentation:Streaming_HowTo/Command_Line_Examples/


sudo service uv4l_raspicam start
#raspivid -n -o - -t 0 -hf -w 640 -h 360 -fps 25 | cvlc -vvv stream:///dev/stdin --sout '#standard{access=http,mux=ts,dst=:8554/video.ogg}' :demux=h264
sudo uv4l -nopreview --auto-video_nr --driver raspicam --encoding mjpeg --width 640 --height 360 --framerate 20 --server-option '--port=9090' --server-option '--max-queued-connections=30' --server-option '--max-streams=25' --server-option '--max-threads=2'

